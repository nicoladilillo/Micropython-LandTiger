#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364can'\364objec\364no\364functio\356mus\364supporte\344multipl\345assignmen\364keywor\344generato\362ar\347o\346nam\345b\345nonloca\354require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364t\357typ\345issubclass(\251empt\371foun\344i\356n\357non-keywor\344rang\345allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344\341argument\363hav\345redefine\344wit\350instanc\345negativ\345sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364ou\364outsid\345impor\364inden\364lengt\350memor\371numbe\362synta\370value\363*\370afte\362a\356byte\363clas\363inde\370isn'\364oute\362tupl\345valu\345'%q\247fro\355ite\355lis\364lon\347sel\346zer\357\262ba\344a\363i\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247**\370*/*\252\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364LH\323Non\345StopIteratio\356__init__(\251abort(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344b\371callabl\345calle\344characte\362chr(\251classe\363cod\345conflic\364consisten\364")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\327\265loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\331\265\204")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\275\205\216\210target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\335pow()\203\206")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\343\214\211\213\205\216\277id")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\346should return\344")
MP_MATCH_COMPRESSED("abort() called", "\377\347\371")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\215reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported yet", "\377\360\203\206yet")
MP_MATCH_COMPRESSED("bad format string", "\377\317format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\317typecode")
MP_MATCH_COMPRESSED("bytes value out of range", "\377\300\306\264\214\237")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\201\356\227\241")
MP_MATCH_COMPRESSED("can't convert to int", "\377\201\255\227\263")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\201\255\227str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\201create\252")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\201declare\217\234\304\375")
MP_MATCH_COMPRESSED("can't delete expression", "\377\201delete\241")
MP_MATCH_COMPRESSED("can't have multiple **x", "\377\201\247\207\332")
MP_MATCH_COMPRESSED("can't have multiple *x", "\377\201\247\207\275")
MP_MATCH_COMPRESSED("can't import name %q", "\377\201\266\215\325")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\201perform relative\266")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\201send non-None\306\227\245just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377\373\213\203\234range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\206")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\256\330\205\216last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\254\261\221\270")
MP_MATCH_COMPRESSED("divide by zero", "\377divide\367\315")
MP_MATCH_COMPRESSED("empty separator", "\377\232separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\205derive\310\341")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\243")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\204got\207\274\223\200\307")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\204\225keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\204\225\220\211\200\307")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\204\225\220positional\200\324")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\353executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\342")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\345")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\242\250\320global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\242\250\320\217")
MP_MATCH_COMPRESSED("index out of range", "\377\302\264\214\237")
MP_MATCH_COMPRESSED("indices must be integers", "\377\262\205\216integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\213\316\205\216\340\316\354\337\336")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\224micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\224\273")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\224\273\223integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\231\213\323\205\216\245\301")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\231\213\316\205\216\245\301\322\245\305\214\374")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\257\245\312\214str/bytes objects\377\251\314\202")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\363\210")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\313\263\203\206\234this\366")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\271\240\260\352\326\300")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\271\240\260heap\321locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\233")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\207\275\234\210")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\207\362\247\252lay-out\376")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\205use\211\200\223key\204")
MP_MATCH_COMPRESSED("name not defined", "\377\215\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\215too\313")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\253power\251\235float\226")
MP_MATCH_COMPRESSED("negative shift count", "\377\253shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\235\351exception\227reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\235\364\223\217\233")
MP_MATCH_COMPRESSED("no such attribute", "\377\235such\357")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\256\200")
MP_MATCH_COMPRESSED("non-keyword arg after */**", "\377\236\213\276\333")
MP_MATCH_COMPRESSED("non-keyword arg after keyword arg", "\377\236\213\276\211\213")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\202\222\226\311\210")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\202\222\226\311deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\202\261\235len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\202\303subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\202\203\277iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\202\203\370")
MP_MATCH_COMPRESSED("object not in sequence", "\377\202\203\234\254")
MP_MATCH_COMPRESSED("object not iterable", "\377\202\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\202\251\365protocol\220")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\257\245\372")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\310\232\312")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\321\232")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\263overflow")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\262")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\206")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\233")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\201find\314")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\305\302\264\214\237")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\243\261\221\270")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\230\303\277\350\361\230")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\230takes\323\322\334\246")
MP_MATCH_COMPRESSED("unexpected indent", "\377\244\267")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\244\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\215escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\222match\355\304\267level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377unsupported\230\223operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\221\272\214\246")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\221\272\214\274\227unpack")
MP_MATCH_COMPRESSED("zero step", "\377\315step")
// Total input length:      2865
// Total compressed length: 1221
// Total data length:       1128
// Predicted saving:        516

// gzip length:             1755
// Percentage of gzip:      133.8%
// zlib length:             1743
// Percentage of zlib:      134.8%
